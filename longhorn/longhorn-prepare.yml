- name: Install Parted if it is not installed
  hosts: k3s_cluster
  tags: longhorn
  tasks:
  - name: Install parted
    become: yes
    apt:
      pkg:
      - parted
      update_cache: yes
      state: latest

- name: Format disks for storage before installing Longhorn
  hosts: node
  tags: longhorn
  tasks:
  - name: Partition the disk into a single large partition filling the disk
    become: yes
    parted:
      device: "{{ device }}"
      number: 1
      state: present
      part_start: "0%"
      part_end: "100%"
      unit: GB

  - name: Create filesystem on new partition
    become: yes
    filesystem:
      fstype: ext4
      dev: "{{ partition }}"

  - name: Mount drive on {{ mount_point }}
    become: yes
    mount:
      src: "{{ partition }}"
      path: "{{ mount_point }}"
      fstype: ext4
      state: mounted
      boot: yes
      backup: yes

- name: Prepare agents for Longhorn
  hosts: k3s_cluster
  tags: longhorn
  tasks:
  - name: Install necessary packages required by Longhorn
    become: yes
    apt:
      pkg:
      - jq
      - open-iscsi
      state: present

  - name: Start the systemd service for iscsid if it is not started
    become: yes
    systemd:
      name: iscsid
      enabled: yes
      state: started

- name: Verify prerequisites for Longhorn and label storage nodes
  hosts: k3s_cluster
  tags: longhorn
  tasks:
  - name: Run the preconfig script
    become: yes
    shell: curl -sSfL https://raw.githubusercontent.com/longhorn/longhorn/v1.2.4/scripts/environment_check.sh | bash
    register: check

  - name: Print output from check
    debug: msg="{{ check.stdout }}"

  # Label the nodes to ensure Longhorn volumes are only placed on disks of the storage nodes:
  # https://longhorn.io/kb/tip-only-use-storage-on-a-set-of-nodes/#tell-longhorn-to-create-a-default-disk-on-a-specific-set-of-nodes
  - name: Apply label "node.longhorn.io/create-default-disk=true" on storage nodes in Kubernetes
    become: yes
    command: kubectl label nodes --overwrite {{ hostvars[item].node_name }} node.longhorn.io/create-default-disk=true
    loop: "{{ hostvars[inventory_hostname]['groups']['storage_servers'] }}"
